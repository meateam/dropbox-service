// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.4
// source: dropbox/dropbox.proto

package dropbox

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetApproverInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Destination string `protobuf:"bytes,2,opt,name=destination,proto3" json:"destination,omitempty"`
}

func (x *GetApproverInfoRequest) Reset() {
	*x = GetApproverInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dropbox_dropbox_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApproverInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApproverInfoRequest) ProtoMessage() {}

func (x *GetApproverInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dropbox_dropbox_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApproverInfoRequest.ProtoReflect.Descriptor instead.
func (*GetApproverInfoRequest) Descriptor() ([]byte, []int) {
	return file_dropbox_dropbox_proto_rawDescGZIP(), []int{0}
}

func (x *GetApproverInfoRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetApproverInfoRequest) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

type GetApproverInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	IsAdmin    bool   `protobuf:"varint,2,opt,name=isAdmin,proto3" json:"isAdmin,omitempty"`
	IsApprover bool   `protobuf:"varint,3,opt,name=isApprover,proto3" json:"isApprover,omitempty"`
	IsBlocked  bool   `protobuf:"varint,4,opt,name=isBlocked,proto3" json:"isBlocked,omitempty"`
	UnitName   string `protobuf:"bytes,5,opt,name=unitName,proto3" json:"unitName,omitempty"`
}

func (x *GetApproverInfoResponse) Reset() {
	*x = GetApproverInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dropbox_dropbox_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApproverInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApproverInfoResponse) ProtoMessage() {}

func (x *GetApproverInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dropbox_dropbox_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApproverInfoResponse.ProtoReflect.Descriptor instead.
func (*GetApproverInfoResponse) Descriptor() ([]byte, []int) {
	return file_dropbox_dropbox_proto_rawDescGZIP(), []int{1}
}

func (x *GetApproverInfoResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetApproverInfoResponse) GetIsAdmin() bool {
	if x != nil {
		return x.IsAdmin
	}
	return false
}

func (x *GetApproverInfoResponse) GetIsApprover() bool {
	if x != nil {
		return x.IsApprover
	}
	return false
}

func (x *GetApproverInfoResponse) GetIsBlocked() bool {
	if x != nil {
		return x.IsBlocked
	}
	return false
}

func (x *GetApproverInfoResponse) GetUnitName() string {
	if x != nil {
		return x.UnitName
	}
	return ""
}

type CanApproveToUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApproverID  string `protobuf:"bytes,1,opt,name=approverID,proto3" json:"approverID,omitempty"`
	UserID      string `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
	Destination string `protobuf:"bytes,3,opt,name=destination,proto3" json:"destination,omitempty"`
}

func (x *CanApproveToUserRequest) Reset() {
	*x = CanApproveToUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dropbox_dropbox_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CanApproveToUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CanApproveToUserRequest) ProtoMessage() {}

func (x *CanApproveToUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dropbox_dropbox_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CanApproveToUserRequest.ProtoReflect.Descriptor instead.
func (*CanApproveToUserRequest) Descriptor() ([]byte, []int) {
	return file_dropbox_dropbox_proto_rawDescGZIP(), []int{2}
}

func (x *CanApproveToUserRequest) GetApproverID() string {
	if x != nil {
		return x.ApproverID
	}
	return ""
}

func (x *CanApproveToUserRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *CanApproveToUserRequest) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

type CanApproveToUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CanApproveToUser   bool     `protobuf:"varint,1,opt,name=canApproveToUser,proto3" json:"canApproveToUser,omitempty"`
	CantApproveReasons []string `protobuf:"bytes,2,rep,name=cantApproveReasons,proto3" json:"cantApproveReasons,omitempty"`
}

func (x *CanApproveToUserResponse) Reset() {
	*x = CanApproveToUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dropbox_dropbox_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CanApproveToUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CanApproveToUserResponse) ProtoMessage() {}

func (x *CanApproveToUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dropbox_dropbox_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CanApproveToUserResponse.ProtoReflect.Descriptor instead.
func (*CanApproveToUserResponse) Descriptor() ([]byte, []int) {
	return file_dropbox_dropbox_proto_rawDescGZIP(), []int{3}
}

func (x *CanApproveToUserResponse) GetCanApproveToUser() bool {
	if x != nil {
		return x.CanApproveToUser
	}
	return false
}

func (x *CanApproveToUserResponse) GetCantApproveReasons() []string {
	if x != nil {
		return x.CantApproveReasons
	}
	return nil
}

type CreateRequestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileID         string          `protobuf:"bytes,1,opt,name=fileID,proto3" json:"fileID,omitempty"`
	SharerID       string          `protobuf:"bytes,2,opt,name=sharerID,proto3" json:"sharerID,omitempty"`
	Users          []*ApprovalUser `protobuf:"bytes,3,rep,name=users,proto3" json:"users,omitempty"`
	Classification string          `protobuf:"bytes,4,opt,name=classification,proto3" json:"classification,omitempty"`
	Info           string          `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
	Approvers      []string        `protobuf:"bytes,6,rep,name=approvers,proto3" json:"approvers,omitempty"`
	FileName       string          `protobuf:"bytes,7,opt,name=fileName,proto3" json:"fileName,omitempty"`
	Destination    string          `protobuf:"bytes,8,opt,name=destination,proto3" json:"destination,omitempty"`
}

func (x *CreateRequestRequest) Reset() {
	*x = CreateRequestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dropbox_dropbox_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequestRequest) ProtoMessage() {}

func (x *CreateRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dropbox_dropbox_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequestRequest.ProtoReflect.Descriptor instead.
func (*CreateRequestRequest) Descriptor() ([]byte, []int) {
	return file_dropbox_dropbox_proto_rawDescGZIP(), []int{4}
}

func (x *CreateRequestRequest) GetFileID() string {
	if x != nil {
		return x.FileID
	}
	return ""
}

func (x *CreateRequestRequest) GetSharerID() string {
	if x != nil {
		return x.SharerID
	}
	return ""
}

func (x *CreateRequestRequest) GetUsers() []*ApprovalUser {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *CreateRequestRequest) GetClassification() string {
	if x != nil {
		return x.Classification
	}
	return ""
}

func (x *CreateRequestRequest) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *CreateRequestRequest) GetApprovers() []string {
	if x != nil {
		return x.Approvers
	}
	return nil
}

func (x *CreateRequestRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *CreateRequestRequest) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

type CreateRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateRequestResponse) Reset() {
	*x = CreateRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dropbox_dropbox_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequestResponse) ProtoMessage() {}

func (x *CreateRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dropbox_dropbox_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequestResponse.ProtoReflect.Descriptor instead.
func (*CreateRequestResponse) Descriptor() ([]byte, []int) {
	return file_dropbox_dropbox_proto_rawDescGZIP(), []int{5}
}

type ApprovalUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ApprovalUser) Reset() {
	*x = ApprovalUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dropbox_dropbox_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApprovalUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApprovalUser) ProtoMessage() {}

func (x *ApprovalUser) ProtoReflect() protoreflect.Message {
	mi := &file_dropbox_dropbox_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApprovalUser.ProtoReflect.Descriptor instead.
func (*ApprovalUser) Descriptor() ([]byte, []int) {
	return file_dropbox_dropbox_proto_rawDescGZIP(), []int{6}
}

func (x *ApprovalUser) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ApprovalUser) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Mail          string   `protobuf:"bytes,2,opt,name=mail,proto3" json:"mail,omitempty"`
	FirstName     string   `protobuf:"bytes,3,opt,name=firstName,proto3" json:"firstName,omitempty"`
	LastName      string   `protobuf:"bytes,4,opt,name=lastName,proto3" json:"lastName,omitempty"`
	FullName      string   `protobuf:"bytes,5,opt,name=fullName,proto3" json:"fullName,omitempty"`
	Hierarchy     []string `protobuf:"bytes,6,rep,name=hierarchy,proto3" json:"hierarchy,omitempty"`
	HierarchyFlat string   `protobuf:"bytes,7,opt,name=hierarchyFlat,proto3" json:"hierarchyFlat,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dropbox_dropbox_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_dropbox_dropbox_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_dropbox_dropbox_proto_rawDescGZIP(), []int{7}
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetMail() string {
	if x != nil {
		return x.Mail
	}
	return ""
}

func (x *User) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *User) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *User) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *User) GetHierarchy() []string {
	if x != nil {
		return x.Hierarchy
	}
	return nil
}

func (x *User) GetHierarchyFlat() string {
	if x != nil {
		return x.HierarchyFlat
	}
	return ""
}

type HasTransferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileID string `protobuf:"bytes,1,opt,name=fileID,proto3" json:"fileID,omitempty"`
	UserID string `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *HasTransferRequest) Reset() {
	*x = HasTransferRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dropbox_dropbox_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HasTransferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HasTransferRequest) ProtoMessage() {}

func (x *HasTransferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dropbox_dropbox_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HasTransferRequest.ProtoReflect.Descriptor instead.
func (*HasTransferRequest) Descriptor() ([]byte, []int) {
	return file_dropbox_dropbox_proto_rawDescGZIP(), []int{8}
}

func (x *HasTransferRequest) GetFileID() string {
	if x != nil {
		return x.FileID
	}
	return ""
}

func (x *HasTransferRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type HasTransferResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HasTransfer bool `protobuf:"varint,1,opt,name=hasTransfer,proto3" json:"hasTransfer,omitempty"`
}

func (x *HasTransferResponse) Reset() {
	*x = HasTransferResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dropbox_dropbox_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HasTransferResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HasTransferResponse) ProtoMessage() {}

func (x *HasTransferResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dropbox_dropbox_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HasTransferResponse.ProtoReflect.Descriptor instead.
func (*HasTransferResponse) Descriptor() ([]byte, []int) {
	return file_dropbox_dropbox_proto_rawDescGZIP(), []int{9}
}

func (x *HasTransferResponse) GetHasTransfer() bool {
	if x != nil {
		return x.HasTransfer
	}
	return false
}

type GetTransfersInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileID   string `protobuf:"bytes,1,opt,name=fileID,proto3" json:"fileID,omitempty"`
	SharerID string `protobuf:"bytes,2,opt,name=sharerID,proto3" json:"sharerID,omitempty"`
}

func (x *GetTransfersInfoRequest) Reset() {
	*x = GetTransfersInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dropbox_dropbox_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransfersInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransfersInfoRequest) ProtoMessage() {}

func (x *GetTransfersInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dropbox_dropbox_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransfersInfoRequest.ProtoReflect.Descriptor instead.
func (*GetTransfersInfoRequest) Descriptor() ([]byte, []int) {
	return file_dropbox_dropbox_proto_rawDescGZIP(), []int{10}
}

func (x *GetTransfersInfoRequest) GetFileID() string {
	if x != nil {
		return x.FileID
	}
	return ""
}

func (x *GetTransfersInfoRequest) GetSharerID() string {
	if x != nil {
		return x.SharerID
	}
	return ""
}

type TransferInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileID      string   `protobuf:"bytes,1,opt,name=fileID,proto3" json:"fileID,omitempty"`
	From        string   `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	Destination string   `protobuf:"bytes,3,opt,name=destination,proto3" json:"destination,omitempty"`
	Status      string   `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt   int64    `protobuf:"varint,5,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	To          []*User  `protobuf:"bytes,6,rep,name=to,proto3" json:"to,omitempty"`
	Failed      []string `protobuf:"bytes,7,rep,name=failed,proto3" json:"failed,omitempty"`
}

func (x *TransferInfoResponse) Reset() {
	*x = TransferInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dropbox_dropbox_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferInfoResponse) ProtoMessage() {}

func (x *TransferInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dropbox_dropbox_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferInfoResponse.ProtoReflect.Descriptor instead.
func (*TransferInfoResponse) Descriptor() ([]byte, []int) {
	return file_dropbox_dropbox_proto_rawDescGZIP(), []int{11}
}

func (x *TransferInfoResponse) GetFileID() string {
	if x != nil {
		return x.FileID
	}
	return ""
}

func (x *TransferInfoResponse) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *TransferInfoResponse) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *TransferInfoResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TransferInfoResponse) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *TransferInfoResponse) GetTo() []*User {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *TransferInfoResponse) GetFailed() []string {
	if x != nil {
		return x.Failed
	}
	return nil
}

type GetTransfersInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransfersInfo []*TransferInfoResponse `protobuf:"bytes,1,rep,name=transfersInfo,proto3" json:"transfersInfo,omitempty"`
}

func (x *GetTransfersInfoResponse) Reset() {
	*x = GetTransfersInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dropbox_dropbox_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransfersInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransfersInfoResponse) ProtoMessage() {}

func (x *GetTransfersInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dropbox_dropbox_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransfersInfoResponse.ProtoReflect.Descriptor instead.
func (*GetTransfersInfoResponse) Descriptor() ([]byte, []int) {
	return file_dropbox_dropbox_proto_rawDescGZIP(), []int{12}
}

func (x *GetTransfersInfoResponse) GetTransfersInfo() []*TransferInfoResponse {
	if x != nil {
		return x.TransfersInfo
	}
	return nil
}

var File_dropbox_dropbox_proto protoreflect.FileDescriptor

var file_dropbox_dropbox_proto_rawDesc = []byte{
	0x0a, 0x15, 0x64, 0x72, 0x6f, 0x70, 0x62, 0x6f, 0x78, 0x2f, 0x64, 0x72, 0x6f, 0x70, 0x62, 0x6f,
	0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x64, 0x72, 0x6f, 0x70, 0x62, 0x6f, 0x78,
	0x22, 0x4a, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa5, 0x01, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x69, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x69, 0x73, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69,
	0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x69, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x73, 0x0a, 0x17, 0x43, 0x61, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x76, 0x0a, 0x18, 0x43, 0x61, 0x6e,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x61, 0x6e, 0x41, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x10, 0x63, 0x61, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x54, 0x6f, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x2e, 0x0a, 0x12, 0x63, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x63,
	0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x73, 0x22, 0x8f, 0x02, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69,
	0x6c, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x61, 0x72, 0x65, 0x72, 0x49, 0x44, 0x12, 0x2b,
	0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x64, 0x72, 0x6f, 0x70, 0x62, 0x6f, 0x78, 0x2e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x17, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x0a, 0x0c,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0xc4, 0x01, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a,
	0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x79,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x68, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68,
	0x79, 0x12, 0x24, 0x0a, 0x0d, 0x68, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x79, 0x46, 0x6c,
	0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x68, 0x69, 0x65, 0x72, 0x61, 0x72,
	0x63, 0x68, 0x79, 0x46, 0x6c, 0x61, 0x74, 0x22, 0x44, 0x0a, 0x12, 0x48, 0x61, 0x73, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66,
	0x69, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x37, 0x0a,
	0x13, 0x48, 0x61, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x68, 0x61, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x68, 0x61, 0x73, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x22, 0x4d, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x72, 0x49, 0x44, 0x22, 0xd1, 0x01, 0x0a, 0x14, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x66, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1d, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x64, 0x72, 0x6f, 0x70, 0x62, 0x6f, 0x78, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x02, 0x74,
	0x6f, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x22, 0x5f, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64,
	0x72, 0x6f, 0x70, 0x62, 0x6f, 0x78, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0d, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0xb5, 0x03, 0x0a, 0x07, 0x44,
	0x72, 0x6f, 0x70, 0x62, 0x6f, 0x78, 0x12, 0x56, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x2e, 0x64, 0x72, 0x6f, 0x70,
	0x62, 0x6f, 0x78, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x64, 0x72, 0x6f,
	0x70, 0x62, 0x6f, 0x78, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59,
	0x0a, 0x10, 0x43, 0x61, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x54, 0x6f, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x20, 0x2e, 0x64, 0x72, 0x6f, 0x70, 0x62, 0x6f, 0x78, 0x2e, 0x43, 0x61, 0x6e,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x64, 0x72, 0x6f, 0x70, 0x62, 0x6f, 0x78, 0x2e, 0x43,
	0x61, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0d, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x2e, 0x64, 0x72, 0x6f,
	0x70, 0x62, 0x6f, 0x78, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x64, 0x72, 0x6f, 0x70,
	0x62, 0x6f, 0x78, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0b, 0x48,
	0x61, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x64, 0x72, 0x6f,
	0x70, 0x62, 0x6f, 0x78, 0x2e, 0x48, 0x61, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x64, 0x72, 0x6f, 0x70, 0x62, 0x6f,
	0x78, 0x2e, 0x48, 0x61, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x2e, 0x64, 0x72,
	0x6f, 0x70, 0x62, 0x6f, 0x78, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x64, 0x72, 0x6f, 0x70, 0x62, 0x6f, 0x78, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dropbox_dropbox_proto_rawDescOnce sync.Once
	file_dropbox_dropbox_proto_rawDescData = file_dropbox_dropbox_proto_rawDesc
)

func file_dropbox_dropbox_proto_rawDescGZIP() []byte {
	file_dropbox_dropbox_proto_rawDescOnce.Do(func() {
		file_dropbox_dropbox_proto_rawDescData = protoimpl.X.CompressGZIP(file_dropbox_dropbox_proto_rawDescData)
	})
	return file_dropbox_dropbox_proto_rawDescData
}

var file_dropbox_dropbox_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_dropbox_dropbox_proto_goTypes = []interface{}{
	(*GetApproverInfoRequest)(nil),   // 0: dropbox.GetApproverInfoRequest
	(*GetApproverInfoResponse)(nil),  // 1: dropbox.GetApproverInfoResponse
	(*CanApproveToUserRequest)(nil),  // 2: dropbox.CanApproveToUserRequest
	(*CanApproveToUserResponse)(nil), // 3: dropbox.CanApproveToUserResponse
	(*CreateRequestRequest)(nil),     // 4: dropbox.CreateRequestRequest
	(*CreateRequestResponse)(nil),    // 5: dropbox.CreateRequestResponse
	(*ApprovalUser)(nil),             // 6: dropbox.ApprovalUser
	(*User)(nil),                     // 7: dropbox.User
	(*HasTransferRequest)(nil),       // 8: dropbox.HasTransferRequest
	(*HasTransferResponse)(nil),      // 9: dropbox.HasTransferResponse
	(*GetTransfersInfoRequest)(nil),  // 10: dropbox.GetTransfersInfoRequest
	(*TransferInfoResponse)(nil),     // 11: dropbox.TransferInfoResponse
	(*GetTransfersInfoResponse)(nil), // 12: dropbox.GetTransfersInfoResponse
}
var file_dropbox_dropbox_proto_depIdxs = []int32{
	6,  // 0: dropbox.CreateRequestRequest.users:type_name -> dropbox.ApprovalUser
	7,  // 1: dropbox.TransferInfoResponse.to:type_name -> dropbox.User
	11, // 2: dropbox.GetTransfersInfoResponse.transfersInfo:type_name -> dropbox.TransferInfoResponse
	0,  // 3: dropbox.Dropbox.GetApproverInfo:input_type -> dropbox.GetApproverInfoRequest
	2,  // 4: dropbox.Dropbox.CanApproveToUser:input_type -> dropbox.CanApproveToUserRequest
	4,  // 5: dropbox.Dropbox.CreateRequest:input_type -> dropbox.CreateRequestRequest
	8,  // 6: dropbox.Dropbox.HasTransfer:input_type -> dropbox.HasTransferRequest
	10, // 7: dropbox.Dropbox.GetTransfersInfo:input_type -> dropbox.GetTransfersInfoRequest
	1,  // 8: dropbox.Dropbox.GetApproverInfo:output_type -> dropbox.GetApproverInfoResponse
	3,  // 9: dropbox.Dropbox.CanApproveToUser:output_type -> dropbox.CanApproveToUserResponse
	5,  // 10: dropbox.Dropbox.CreateRequest:output_type -> dropbox.CreateRequestResponse
	9,  // 11: dropbox.Dropbox.HasTransfer:output_type -> dropbox.HasTransferResponse
	12, // 12: dropbox.Dropbox.GetTransfersInfo:output_type -> dropbox.GetTransfersInfoResponse
	8,  // [8:13] is the sub-list for method output_type
	3,  // [3:8] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_dropbox_dropbox_proto_init() }
func file_dropbox_dropbox_proto_init() {
	if File_dropbox_dropbox_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dropbox_dropbox_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApproverInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dropbox_dropbox_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApproverInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dropbox_dropbox_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CanApproveToUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dropbox_dropbox_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CanApproveToUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dropbox_dropbox_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRequestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dropbox_dropbox_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dropbox_dropbox_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApprovalUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dropbox_dropbox_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dropbox_dropbox_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HasTransferRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dropbox_dropbox_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HasTransferResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dropbox_dropbox_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransfersInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dropbox_dropbox_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dropbox_dropbox_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransfersInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dropbox_dropbox_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dropbox_dropbox_proto_goTypes,
		DependencyIndexes: file_dropbox_dropbox_proto_depIdxs,
		MessageInfos:      file_dropbox_dropbox_proto_msgTypes,
	}.Build()
	File_dropbox_dropbox_proto = out.File
	file_dropbox_dropbox_proto_rawDesc = nil
	file_dropbox_dropbox_proto_goTypes = nil
	file_dropbox_dropbox_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DropboxClient is the client API for Dropbox service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DropboxClient interface {
	GetApproverInfo(ctx context.Context, in *GetApproverInfoRequest, opts ...grpc.CallOption) (*GetApproverInfoResponse, error)
	CanApproveToUser(ctx context.Context, in *CanApproveToUserRequest, opts ...grpc.CallOption) (*CanApproveToUserResponse, error)
	CreateRequest(ctx context.Context, in *CreateRequestRequest, opts ...grpc.CallOption) (*CreateRequestResponse, error)
	HasTransfer(ctx context.Context, in *HasTransferRequest, opts ...grpc.CallOption) (*HasTransferResponse, error)
	GetTransfersInfo(ctx context.Context, in *GetTransfersInfoRequest, opts ...grpc.CallOption) (*GetTransfersInfoResponse, error)
}

type dropboxClient struct {
	cc grpc.ClientConnInterface
}

func NewDropboxClient(cc grpc.ClientConnInterface) DropboxClient {
	return &dropboxClient{cc}
}

func (c *dropboxClient) GetApproverInfo(ctx context.Context, in *GetApproverInfoRequest, opts ...grpc.CallOption) (*GetApproverInfoResponse, error) {
	out := new(GetApproverInfoResponse)
	err := c.cc.Invoke(ctx, "/dropbox.Dropbox/GetApproverInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dropboxClient) CanApproveToUser(ctx context.Context, in *CanApproveToUserRequest, opts ...grpc.CallOption) (*CanApproveToUserResponse, error) {
	out := new(CanApproveToUserResponse)
	err := c.cc.Invoke(ctx, "/dropbox.Dropbox/CanApproveToUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dropboxClient) CreateRequest(ctx context.Context, in *CreateRequestRequest, opts ...grpc.CallOption) (*CreateRequestResponse, error) {
	out := new(CreateRequestResponse)
	err := c.cc.Invoke(ctx, "/dropbox.Dropbox/CreateRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dropboxClient) HasTransfer(ctx context.Context, in *HasTransferRequest, opts ...grpc.CallOption) (*HasTransferResponse, error) {
	out := new(HasTransferResponse)
	err := c.cc.Invoke(ctx, "/dropbox.Dropbox/HasTransfer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dropboxClient) GetTransfersInfo(ctx context.Context, in *GetTransfersInfoRequest, opts ...grpc.CallOption) (*GetTransfersInfoResponse, error) {
	out := new(GetTransfersInfoResponse)
	err := c.cc.Invoke(ctx, "/dropbox.Dropbox/GetTransfersInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DropboxServer is the server API for Dropbox service.
type DropboxServer interface {
	GetApproverInfo(context.Context, *GetApproverInfoRequest) (*GetApproverInfoResponse, error)
	CanApproveToUser(context.Context, *CanApproveToUserRequest) (*CanApproveToUserResponse, error)
	CreateRequest(context.Context, *CreateRequestRequest) (*CreateRequestResponse, error)
	HasTransfer(context.Context, *HasTransferRequest) (*HasTransferResponse, error)
	GetTransfersInfo(context.Context, *GetTransfersInfoRequest) (*GetTransfersInfoResponse, error)
}

// UnimplementedDropboxServer can be embedded to have forward compatible implementations.
type UnimplementedDropboxServer struct {
}

func (*UnimplementedDropboxServer) GetApproverInfo(context.Context, *GetApproverInfoRequest) (*GetApproverInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetApproverInfo not implemented")
}
func (*UnimplementedDropboxServer) CanApproveToUser(context.Context, *CanApproveToUserRequest) (*CanApproveToUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CanApproveToUser not implemented")
}
func (*UnimplementedDropboxServer) CreateRequest(context.Context, *CreateRequestRequest) (*CreateRequestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRequest not implemented")
}
func (*UnimplementedDropboxServer) HasTransfer(context.Context, *HasTransferRequest) (*HasTransferResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HasTransfer not implemented")
}
func (*UnimplementedDropboxServer) GetTransfersInfo(context.Context, *GetTransfersInfoRequest) (*GetTransfersInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTransfersInfo not implemented")
}

func RegisterDropboxServer(s *grpc.Server, srv DropboxServer) {
	s.RegisterService(&_Dropbox_serviceDesc, srv)
}

func _Dropbox_GetApproverInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetApproverInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DropboxServer).GetApproverInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dropbox.Dropbox/GetApproverInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DropboxServer).GetApproverInfo(ctx, req.(*GetApproverInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dropbox_CanApproveToUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CanApproveToUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DropboxServer).CanApproveToUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dropbox.Dropbox/CanApproveToUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DropboxServer).CanApproveToUser(ctx, req.(*CanApproveToUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dropbox_CreateRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequestRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DropboxServer).CreateRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dropbox.Dropbox/CreateRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DropboxServer).CreateRequest(ctx, req.(*CreateRequestRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dropbox_HasTransfer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HasTransferRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DropboxServer).HasTransfer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dropbox.Dropbox/HasTransfer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DropboxServer).HasTransfer(ctx, req.(*HasTransferRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dropbox_GetTransfersInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTransfersInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DropboxServer).GetTransfersInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dropbox.Dropbox/GetTransfersInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DropboxServer).GetTransfersInfo(ctx, req.(*GetTransfersInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Dropbox_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dropbox.Dropbox",
	HandlerType: (*DropboxServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetApproverInfo",
			Handler:    _Dropbox_GetApproverInfo_Handler,
		},
		{
			MethodName: "CanApproveToUser",
			Handler:    _Dropbox_CanApproveToUser_Handler,
		},
		{
			MethodName: "CreateRequest",
			Handler:    _Dropbox_CreateRequest_Handler,
		},
		{
			MethodName: "HasTransfer",
			Handler:    _Dropbox_HasTransfer_Handler,
		},
		{
			MethodName: "GetTransfersInfo",
			Handler:    _Dropbox_GetTransfersInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dropbox/dropbox.proto",
}
